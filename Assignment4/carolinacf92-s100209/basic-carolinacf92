prefix pref:<http://GP-onto.fi.upm.es/exercise2#>

-Get all the classes

select ?classes where{ 
  ?classes a rdfs:Class. 
}

-Get all the subclasses of the class Establishment

select ?subclases where{ 
  ?subclases rdfs:subClassOf pref:Establishment
}

-Get all instances of the class City

select ?instances where{ 
 ?instances a pref:City
}

-Get the number of inhabitants of Santiago de Compostela

select ?number where{ 
   pref:Santiago_de_Compostela pref:hasInhabitantNumber ?number . 
}

-Get the number of inhabitants of Santiago de Compostela and Arzua

select ?numberSantiago ?numberArzua where{ 
  pref:Santiago_de_Compostela pref:hasInhabitantNumber ?numberSantiago . 
  pref:Arzua pref:hasInhabitantNumber ?numberArzua . 
}

-Get all places, together with the number of inhabitants, ordered by the place name (ascending)

select ?place ?number where{ 
  ?place pref:hasInhabitantNumber ?number . 
}
order by asc(?place)

-Get all instances of Locality together with their number of inhabitants (if this information exists)

select ?place ?number where{ 
  ?localidad rdfs:subClassOf pref:Locality .
  ?place rdf:type ?localidad
  optional {?place pref:hasInhabitantNumber ?number}
}

-Get all places with more than 200.000 inhabitants

select ?place ?number where{ 
  ?place pref:hasInhabitantNumber ?number
  filter (xsd:integer(?number) > 200000)
}

-Get postal address data for Pazo_Breogan (street, number, locality, province)

select ?street ?number ?locality ?province where{ 
    pref:Pazo_Breogan pref:hasAddress ?address;
    pref:isPlacedIn ?locality . ?locality 
    pref:inProvince ?province . ?address
    pref:hasStreet ?street ;
    pref:hasNumber ?number 
}

-Get all subclasses of class Location

select ?subclases where{
  ?subclases rdfs:subClassOf pref:Location
}

-Get all instances of class Locality

select ?instances where{
  ?instances rdf:type pref:Location
}

-Describe the resource with rdfs:label "Madrid”

describe ?resource where { 
  ?resource rdfs:label "Madrid" 
}

-Construct a graph that relates directly all touristic places with their provinces, using a new property called ”isIn”



-Check whether there is any instance of Town

ASK  {
  ?question rdf:type pref:Town. 
}
